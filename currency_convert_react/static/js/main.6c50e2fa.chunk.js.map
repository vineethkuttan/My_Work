{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectCurrency","onChangeCurrency","amount","onChangeAmount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","FromCurrency","setFromCurrency","ToCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","console","log","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEe,SAASA,EAAYC,GAAQ,IACjCC,EAAuED,EAAvEC,gBAAgBC,EAAuDF,EAAvDE,eAAeC,EAAwCH,EAAxCG,iBAAiBC,EAAuBJ,EAAvBI,OAAOC,EAAgBL,EAAhBK,eAC9D,OACI,6BACI,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOJ,EAAQK,SAAUJ,IAChE,4BAAQG,MAAON,EAAgBO,SAAUN,GACpCF,EAAgBS,KAAI,SAAAC,GAAM,OAAK,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,QCJrF,IAAME,EAAU,yCA8DDC,MA7Df,WAAgB,IASVC,EAASC,EATA,EAC8BC,mBAAS,IADvC,mBACNhB,EADM,KACUiB,EADV,OAEwBD,qBAFxB,mBAENE,EAFM,KAEOC,EAFP,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAIyBL,qBAJzB,mBAINM,EAJM,KAIQC,EAJR,OAKYP,mBAAS,GALrB,mBAKNb,EALM,KAKCqB,EALD,OAMyCR,oBAAS,GANlD,mBAMNS,EANM,KAMgBC,EANhB,KAmDb,OA5CAC,QAAQC,IAAI5B,GAGTyB,GAEDV,EAAWZ,EACXW,EAASX,EAAOmB,IAGhBR,EAASX,EACTY,EAAWZ,EAAOmB,GAGpBO,qBAAU,WACRC,MAAMlB,GACHmB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEJ,IAAMC,EAAcC,OAAOC,KAAKH,EAAKI,OAAO,GAC5CrB,EAAmB,CAACiB,EAAKK,MAAP,mBAAeH,OAAOC,KAAKH,EAAKI,UAClDnB,EAAgBe,EAAKK,MACrBlB,EAAcc,GACdZ,EAAgBW,EAAKI,MAAMH,SAG/B,IAEFN,qBAAU,WACU,MAAfX,GAAmC,MAAZE,GAC1BU,MAAM,GAAD,OAAIlB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CW,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAEX,EAAgBW,EAAKI,MAAMlB,SACzC,CAACF,EAAaE,IAad,oCACA,0DACE,kBAACtB,EAAD,CAAaE,gBAAiBA,EAAiBI,eAbnD,SAAgCoC,GAC5BhB,EAAUgB,EAAEC,OAAOlC,OACnBmB,GAAwB,IAW+DvB,OAAQY,EAAYd,eAAgBiB,EAAchB,iBAJpH,SAAAwC,GAAK,OAAIvB,EAAgBuB,EAAMD,OAAOlC,UAK7D,yBAAKD,UAAU,UAAf,KACE,kBAACR,EAAD,CAAaE,gBAAiBA,EAAiBI,eAXnD,SAA8BoC,GAC5BhB,EAAUgB,EAAEC,OAAOlC,OACnBmB,GAAwB,IAS+DvB,OAAQW,EAAUb,eAAgBmB,EAAYlB,iBAP/G,SAAAwC,GAAK,OAAIrB,EAAcqB,EAAMD,OAAOlC,YCjD9DoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6c50e2fa.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function CurrencyRow(props) {\n    const {currencyOptions,selectCurrency,onChangeCurrency,amount,onChangeAmount}=props\n    return (\n        <div>\n            <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\n            <select value={selectCurrency} onChange={onChangeCurrency}>\n                {currencyOptions.map(option => (<option key={option} value={option}>{option}</option>))}\n            </select>\n        </div>\n    )\n}\n","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport CurrencyRow  from './CurrencyRow';\n\nconst BASE_URL ='https://api.exchangeratesapi.io/latest'\nfunction App() {\n  const [currencyOptions,setCurrencyOptions]=useState([])\n  const [FromCurrency,setFromCurrency]=useState()\n  const [ToCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate]=useState()\n  const [amount,setAmount]=useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency]=useState(true)\n  console.log(currencyOptions)\n\n  let toAmount,fromAmount\n  if(amountInFromCurrency)\n  {\n    fromAmount=amount\n    toAmount=amount*exchangeRate\n  }\n  else{\n    toAmount=amount\n    fromAmount=amount/exchangeRate\n  }\n\n  useEffect(()=>{\n    fetch(BASE_URL)\n      .then(res=>res.json())\n      .then(data=>\n      {\n        const firstCurrency=Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base,...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n\n  },[])\n\n  useEffect(()=>{\n    if(FromCurrency !=null && ToCurrency!=null)\n    fetch(`${BASE_URL}?base=${FromCurrency}&symbols=${ToCurrency}`)\n      .then(res=>res.json())\n      .then(data=>setExchangeRate(data.rates[ToCurrency]))\n  },[FromCurrency,ToCurrency])\n\n  function handleFromAmountChange(e) {\n      setAmount(e.target.value)\n      setAmountInFromCurrency(true)\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n const onChangeCurrencyT= event => setToCurrency(event.target.value)\n const onChangeCurrencyF = event => setFromCurrency(event.target.value)\n  return (\n    <>\n    <h1>Vineeth Currency Converter</h1>\n      <CurrencyRow currencyOptions={currencyOptions} onChangeAmount={handleFromAmountChange} amount={fromAmount} selectCurrency={FromCurrency} onChangeCurrency={onChangeCurrencyF}/>\n    <div className=\"equals\">=</div>\n      <CurrencyRow currencyOptions={currencyOptions} onChangeAmount={handleToAmountChange} amount={toAmount} selectCurrency={ToCurrency} onChangeCurrency={onChangeCurrencyT}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}